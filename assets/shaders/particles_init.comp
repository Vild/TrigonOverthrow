#version 440 core
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

layout (std430, binding = 0) buffer PositionBuffer {
		vec3 positions[];
};

layout (std430, binding = 1) buffer VelocityBuffer {
		vec3 velocities[];
};

layout (std430, binding = 2) buffer LifeBuffer {
	float lives[];
};

uniform float delta;

highp float rand(vec2 co){
    highp float a = 12.9898;
    highp float b = 78.233;
    highp float c = 43758.5453;
    highp float dt= dot(co.xy ,vec2(a,b));
    highp float sn= mod(dt,3.14);
    return fract(sin(sn) * c);
}

void main(){
	uint index = gl_GlobalInvocationID.x;
	vec3 pos = positions[index];
	//vec3 vel = positions[index];

	pos += vec3(0, 1, 0) * delta;
	positions[index] = pos;
	//lives[index] = 2.0f;
}
